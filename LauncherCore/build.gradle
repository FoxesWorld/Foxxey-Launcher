sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    compileOnly group: 'org.fusesource.jansi', name: 'jansi', version: rootProject['verJansi']
    compileOnly group: 'org.jline', name: 'jline', version: rootProject['verJline']
    compileOnly group: 'org.jline', name: 'jline-reader', version: rootProject['verJline']
    compileOnly group: 'org.jline', name: 'jline-terminal', version: rootProject['verJline']
    compileOnly group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: rootProject['verBcprov']
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: rootProject['verSlf4j']
    api group: 'com.google.code.gson', name: 'gson', version: rootProject['verGson']
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: rootProject['verJunit']
    testImplementation group: 'org.jline', name: 'jline', version: rootProject['verJline']
    testImplementation group: 'org.jline', name: 'jline-reader', version: rootProject['verJline']
    testImplementation group: 'org.jline', name: 'jline-terminal', version: rootProject['verJline']
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
sourceSets {
    java11 {
        java {
            srcDirs = ['src/main/java11']
        }
        dependencies {
            java11Implementation group: 'com.google.code.gson', name: 'gson', version: rootProject['verGson']
            java11Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }
        }
    }
}
jar {
    into('META-INF/versions/11') {
        from sourceSets.java11.output
    }
    classifier = 'clean'
}
compileJava11Java {
    sourceCompatibility = 11
    targetCompatibility = 11
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}
