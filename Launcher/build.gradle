apply plugin: 'org.openjfx.javafxplugin'
apply plugin: 'com.github.johnrengelman.shadow'

String mainClassName = "org.foxesworld.launcher.ClientLauncherWrapper"
String mainAgentName = "org.foxesworld.launcher.LauncherAgent"

repositories {
    maven {
        url "https://repo.spring.io/plugins-release/"
    }
}
javafx {
    version = "12"
    modules = ['javafx.controls', 'javafx.fxml']
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    bundle
    pack
    api.extendsFrom bundle, pack
}

jar {
    archiveClassifier.set('clean')
    manifest.attributes("Main-Class": mainClassName,
            "Premain-Class": mainAgentName,
            "Multi-Release": "true")
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

shadowJar {
    duplicatesStrategy = 'EXCLUDE'
    archiveClassifier.set(null)
    relocate 'org.objectweb.asm', 'org.foxesworld.repackage.org.objectweb.asm'
    relocate 'io.netty', 'org.foxesworld.repackage.io.netty'
    configurations = [project.configurations.pack]
    exclude 'module-info.class'
}

dependencies {
    pack project(':LauncherAPI')
    bundle group: 'com.github.oshi', name: 'oshi-core', version: rootProject['verOshiCore']
    pack group: 'io.netty', name: 'netty-codec-http', version: rootProject['verNetty']
    pack group: 'org.ow2.asm', name: 'asm-tree', version: rootProject['verAsm']
}

task genRuntimeJS(type: Zip) {
    duplicatesStrategy = 'EXCLUDE'
    archiveFileName = "runtime.zip"
    destinationDirectory = file("${buildDir}/tmp")
    from "runtime/"
}

task dumpLibs(type: Copy) {
    duplicatesStrategy = 'EXCLUDE'
    into "$buildDir/libs/libraries"
    from configurations.bundle
}


assemble.dependsOn tasks.genRuntimeJS, tasks.dumpLibs, tasks.shadowJar
